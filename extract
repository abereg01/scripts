#!/bin/sh
#
# Modified extract script from Basilioss
#
# Original Author: https://github.com/msjche/.local-bin-scripts/blob/master/ext
# Github: https://github.com/basilioss/dotfiles
#
# A general, all-purpose extraction script. Not all extraction programs here
# are installed by LARBS automatically.
#
# Default behavior: Extract archive into new directory
# Behavior with `-c` option: Extract contents into current directory

#!/bin/bash

set -euo pipefail

# Function to display usage information
usage() {
    cat << EOF
Usage: $(basename "$0") [-c] <archive_file>
Options:
    -c: Extract archive into current directory rather than a new one.
    -h: Display this help message.
EOF
    exit 1
}

# Function to extract the archive
extract_archive() {
    local archive="$1"
    if [ ! -f "$archive" ]; then
        echo "Error: File '$archive' not found." >&2
        exit 1
    fi

    case "$archive" in
        *.tar.bz2|*.tbz2) tar xvjf "$archive" ;;
        *.tar.xz) tar -xf "$archive" ;;
        *.tar.gz|*.tgz) tar xvzf "$archive" ;;
        *.lzma) unlzma "$archive" ;;
        *.bz2) bunzip2 "$archive" ;;
        *.rar) unrar x -ad "$archive" ;;
        *.gz) gunzip "$archive" ;;
        *.tar) tar xvf "$archive" ;;
        *.zip) unzip "$archive" ;;
        *.Z) uncompress "$archive" ;;
        *.7z) 7z x "$archive" ;;
        *.xz) unxz "$archive" ;;
        *.exe) cabextract "$archive" ;;
        *) echo "Error: '$archive' - unknown archive method" >&2; exit 1 ;;
    esac
}

# Main script
main() {
    local extract_here=false
    local OPTIND
    while getopts ":ch" opt; do
        case ${opt} in
            c ) extract_here=true ;;
            h ) usage ;;
            \? ) echo "Invalid option: -$OPTARG" >&2; usage ;;
        esac
    done
    shift $((OPTIND -1))

    if [ $# -eq 0 ]; then
        echo "Error: No archive specified." >&2
        usage
    fi

    local archive
    archive=$(readlink -f "$1")

    if ! $extract_here; then
        local directory
        directory=$(basename "$archive" | sed 's/\.[^.]*$//')
        mkdir -p "$directory"
        cd "$directory" || exit 1
    fi

    extract_archive "$archive"
}

main "$@"
